{
  "containers": {
    "cna": {
      "affected": [
        {
          "product": "Apache Log4j2",
          "vendor": "Apache Software Foundation",
          "versions": [
            {
              "changes": [
                {
                  "at": "2.13.0",
                  "status": "affected"
                },
                {
                  "at": "2.12.2",
                  "status": "unaffected"
                },
                {
                  "at": "2.4",
                  "status": "affected"
                },
                {
                  "at": "2.3.1",
                  "status": "unaffected"
                },
                {
                  "at": "2.0-alpha1",
                  "status": "affected"
                }
              ],
              "lessThan": "2.16.0",
              "status": "affected",
              "version": "log4j-core",
              "versionType": "custom"
            }
          ]
        }
      ],
      "credits": [
        {
          "lang": "en",
          "value": "This issue was discovered by Kai Mindermann of iC Consult and separately by 4ra1n."
        },
        {
          "lang": "en",
          "value": "Additional vulnerability details discovered independently by Ash Fox of Google, Alvaro Mu\u00f1oz and Tony Torralba from GitHub, Anthony Weems of Praetorian, and RyotaK (@ryotkak)"
        }
      ],
      "descriptions": [
        {
          "lang": "en",
          "value": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. When the logging configuration uses a non-default Pattern Layout with a Context Lookup (for example, $${ctx:loginId}), attackers with control over Thread Context Map (MDC) input data can craft malicious input data using a JNDI Lookup pattern, resulting in an information leak and remote code execution in some environments and local code execution in all environments; remote code execution has been demonstrated in operating systems using glibc with the libnss_resolve provider, glibc versions before 2.28, musl, and systemd-resolvd.\n\nLog4j 2.16.0 (Java 8), 2.12.2 (Java 7), and 2.3.1 (Java 6) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.\n\n"
        }
      ],
      "metrics": [
        {
          "other": {
            "content": {
              "other": "critical"
            },
            "type": "unknown"
          }
        }
      ],
      "problemTypes": [
        {
          "descriptions": [
            {
              "cweId": "CWE-502",
              "description": "CWE-502 Deserialization of Untrusted Data",
              "lang": "en",
              "type": "CWE"
            }
          ]
        },
        {
          "descriptions": [
            {
              "cweId": "CWE-241",
              "description": "CWE-241: Improper Handling of Unexpected Data Type",
              "lang": "en",
              "type": "CWE"
            }
          ]
        }
      ],
      "providerMetadata": {
        "orgId": "Not found",
        "shortName": "Not found"
      },
      "references": [
        {
          "tags": [
            "x_refsource_CONFIRM"
          ],
          "url": "https://logging.apache.org/log4j/2.x/security.html"
        },
        {
          "tags": [
            "x_refsource_MISC"
          ],
          "url": "https://www.cve.org/CVERecord?id=CVE-2021-44228"
        }
      ],
      "source": {
        "discovery": "UNKNOWN"
      },
      "title": "Apache Log4j2 Thread Context Lookup Pattern vulnerable to remote code execution in certain non-default configurations",
      "workarounds": [
        {
          "lang": "en",
          "value": "The Apache Logging PMC now recommends against previous mitigations involving configuration (such as setting system property `log4j2.formatMsgNoLookups` to `true`), since these measures do NOT mitigate this specific attack vector through Thread Context patterns or lookups, nor do they protect against the vulnerability reported in CVE-44228.\n\nThis issue can be mitigated in prior releases (<2.16.0) by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class)."
        }
      ],
      "x_ValidationErrors": [
        "$.cveMetadata.assignerOrgId -- validator = pattern",
        "$.containers.cna.providerMetadata.orgId -- validator = pattern"
      ],
      "x_generator": {
        "engine": "Vulnogram 0.0.9"
      },
      "x_legacyV4Record": {
        "CNA_private": {
          "CVE_list": [],
          "CVE_table_description": [],
          "email": "",
          "emailed": "yes",
          "internal_comments": "",
          "owner": "logging",
          "publish": {
            "month": "",
            "year": "",
            "ym": ""
          },
          "share_with_CVE": true,
          "todo": [],
          "userslist": "dev@logging.apache.org"
        },
        "CVE_data_meta": {
          "AKA": "",
          "ASSIGNER": "security@apache.org",
          "DATE_PUBLIC": "",
          "ID": "CVE-2021-45046",
          "STATE": "PUBLIC",
          "TITLE": "Apache Log4j2 Thread Context Lookup Pattern vulnerable to remote code execution in certain non-default configurations"
        },
        "affects": {
          "vendor": {
            "vendor_data": [
              {
                "product": {
                  "product_data": [
                    {
                      "product_name": "Apache Log4j2",
                      "version": {
                        "version_data": [
                          {
                            "platform": "",
                            "version_affected": "<",
                            "version_name": "log4j-core",
                            "version_value": "2.16.0"
                          },
                          {
                            "platform": "",
                            "version_affected": ">=",
                            "version_name": "log4j-core",
                            "version_value": "2.13.0"
                          },
                          {
                            "platform": "",
                            "version_affected": "<",
                            "version_name": "log4j-core",
                            "version_value": "2.12.2"
                          },
                          {
                            "platform": "",
                            "version_affected": ">=",
                            "version_name": "log4j-core",
                            "version_value": "2.4"
                          },
                          {
                            "platform": "",
                            "version_affected": "<",
                            "version_name": "log4j-core",
                            "version_value": "2.3.1"
                          },
                          {
                            "platform": "",
                            "version_affected": ">=",
                            "version_name": "log4j-core",
                            "version_value": "2.0-alpha1"
                          }
                        ]
                      }
                    }
                  ]
                },
                "vendor_name": "Apache Software Foundation"
              }
            ]
          }
        },
        "configuration": [],
        "credit": [
          {
            "lang": "eng",
            "value": "This issue was discovered by Kai Mindermann of iC Consult and separately by 4ra1n."
          },
          {
            "lang": "eng",
            "value": "Additional vulnerability details discovered independently by Ash Fox of Google, Alvaro Mu\u00f1oz and Tony Torralba from GitHub, Anthony Weems of Praetorian, and RyotaK (@ryotkak)"
          }
        ],
        "data_format": "MITRE",
        "data_type": "CVE",
        "data_version": "4.0",
        "description": {
          "description_data": [
            {
              "lang": "eng",
              "value": "It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. When the logging configuration uses a non-default Pattern Layout with a Context Lookup (for example, $${ctx:loginId}), attackers with control over Thread Context Map (MDC) input data can craft malicious input data using a JNDI Lookup pattern, resulting in an information leak and remote code execution in some environments and local code execution in all environments; remote code execution has been demonstrated in operating systems using glibc with the libnss_resolve provider, glibc versions before 2.28, musl, and systemd-resolvd.\n\nLog4j 2.16.0 (Java 8), 2.12.2 (Java 7), and 2.3.1 (Java 6) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.\n\n"
            }
          ]
        },
        "exploit": [],
        "generator": {
          "engine": "Vulnogram 0.0.9"
        },
        "impact": [
          {
            "other": "critical"
          }
        ],
        "problemtype": {
          "problemtype_data": [
            {
              "description": [
                {
                  "lang": "eng",
                  "value": "CWE-502 Deserialization of Untrusted Data"
                }
              ]
            },
            {
              "description": [
                {
                  "lang": "eng",
                  "value": "CWE-241: Improper Handling of Unexpected Data Type"
                }
              ]
            }
          ]
        },
        "references": {
          "reference_data": [
            {
              "name": "",
              "refsource": "CONFIRM",
              "url": "https://logging.apache.org/log4j/2.x/security.html"
            },
            {
              "name": "",
              "refsource": "MISC",
              "url": "https://www.cve.org/CVERecord?id=CVE-2021-44228"
            }
          ]
        },
        "solution": [],
        "source": {
          "advisory": "",
          "defect": [],
          "discovery": "UNKNOWN"
        },
        "timeline": [],
        "work_around": [
          {
            "lang": "en",
            "value": "The Apache Logging PMC now recommends against previous mitigations involving configuration (such as setting system property `log4j2.formatMsgNoLookups` to `true`), since these measures do NOT mitigate this specific attack vector through Thread Context patterns or lookups, nor do they protect against the vulnerability reported in CVE-44228.\n\nThis issue can be mitigated in prior releases (<2.16.0) by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class)."
          }
        ]
      }
    }
  },
  "cveMetadata": {
    "assignerOrgId": "Not found",
    "assignerShortName": "Not found",
    "cveId": "CVE-2021-45046",
    "state": "PUBLISHED"
  },
  "dataType": "CVE_RECORD",
  "dataVersion": "5.0"
}