{
  "containers": {
    "cna": {
      "providerMetadata": {
        "orgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09"
      },
      "title": "Integration API service uses dynamic port when disabled",
      "problemTypes": [
        {
          "descriptions": [
            {
              "description": "CWE-665 Improper Initialization",
              "lang": "en",
              "cweId": "CWE-665",
              "type": "CWE"
            }
          ]
        },
        {
          "descriptions": [
            {
              "description": "CWE-94 Improper Control of Generation of Code ('Code Injection')",
              "lang": "en",
              "cweId": "CWE-94",
              "type": "CWE"
            }
          ]
        }
      ],
      "source": {
        "discovery": "UNKNOWN"
      },
      "affected": [
        {
          "vendor": "Apache Software Foundation",
          "product": "Apache CloudStack",
          "versions": [
            {
              "status": "affected",
              "version": "4.0.0",
              "lessThanOrEqual": "4.18.2.0",
              "versionType": "semver"
            },
            {
              "status": "affected",
              "version": "4.19.0.0",
              "lessThanOrEqual": "4.19.0.1",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "descriptions": [
        {
          "value": "The CloudStack integration API service allows running its unauthenticated API server (usually on port 8096 when configured and enabled via integration.api.port global setting) for internal portal integrations and for testing purposes. By default, the integration API service port is disabled and is considered disabled when integration.api.port is set to 0 or negative. Due to an improper initialisation logic, the integration API service would listen on a random port when its port value is set to 0 (default value).\u00a0An attacker that can access the CloudStack management network could scan and find the randomised integration API service port and exploit it to perform unauthorised administrative actions and perform remote code execution on CloudStack managed hosts and result in complete\u00a0compromise of the confidentiality, integrity, and availability of CloudStack managed infrastructure.\n\nUsers are recommended to restrict the network access on the CloudStack management server hosts to only essential ports. Users are recommended to upgrade to version 4.18.2.1, 4.19.0.2 or later, which addresses this issue.\n\n",
          "lang": "en",
          "supportingMedia": [
            {
              "type": "text/html",
              "base64": false,
              "value": "<div><p>The CloudStack integration API service allows running its unauthenticated API server (usually on port 8096 when configured and enabled via integration.api.port global setting) for internal portal integrations and for testing purposes. By default, the integration API service port is disabled and is considered disabled when integration.api.port is set to 0 or negative. Due to an improper initialisation logic, the integration API service would listen on a random port when its port value is set to 0 (default value).&nbsp;<span style=\"background-color: rgb(255, 255, 255);\">An attacker that can access the CloudStack management network could scan and find the randomised integration API service port and exploit it to perform unauthorised administrative actions and perform remote code execution on CloudStack managed hosts and result in complete</span>&nbsp;compromise of the confidentiality, integrity, and availability of CloudStack managed infrastructure.<span style=\"background-color: rgb(255, 255, 255);\"><br></span></p><span style=\"background-color: rgb(255, 255, 255);\"><div><span style=\"background-color: rgb(255, 255, 255);\">Users are recommended to restrict the network access on the CloudStack management server hosts to only essential ports. </span>Users are recommended to upgrade to version 4.18.2.1, 4.19.0.2 or later, which addresses this issue.</div></span></div>"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://lists.apache.org/thread/6l51r00csrct61plkyd3qg3fj99215d1",
          "tags": [
            "vendor-advisory",
            "mailing-list"
          ]
        },
        {
          "url": "https://cloudstack.apache.org/blog/security-release-advisory-4.19.0.2-4.18.2.1",
          "tags": [
            "vendor-advisory",
            "patch"
          ]
        },
        {
          "url": "https://www.shapeblue.com/shapeblue-security-advisory-apache-cloudstack-security-releases-4-18-2-1-and-4-19-0-2/",
          "tags": [
            "third-party-advisory"
          ]
        }
      ],
      "metrics": [
        {
          "other": {
            "type": "Textual description of severity",
            "content": {
              "text": "important"
            }
          }
        }
      ],
      "credits": [
        {
          "lang": "en",
          "value": "Adam Pond of Apple Services Engineering Security",
          "type": "finder"
        },
        {
          "lang": "en",
          "value": "Terry Thibault of Apple Services Engineering Security",
          "type": "finder"
        },
        {
          "lang": "en",
          "value": "Damon Smith of Apple Services Engineering Security",
          "type": "finder"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.1.0-dev"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-39864",
    "assignerOrgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09",
    "serial": 1,
    "state": "PUBLISHED"
  },
  "dataType": "CVE_RECORD",
  "dataVersion": "5.0"
}