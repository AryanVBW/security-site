{
  "containers": {
    "cna": {
      "providerMetadata": {
        "orgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09"
      },
      "title": "Timing Attack Against Signature in LLAP util",
      "problemTypes": [
        {
          "descriptions": [
            {
              "description": "CWE-208: Observable Timing Discrepancy",
              "lang": "en",
              "cweId": "CWE-208",
              "type": "CWE"
            }
          ]
        }
      ],
      "source": {
        "defect": [
          "HIVE-28030"
        ],
        "discovery": "UNKNOWN"
      },
      "affected": [
        {
          "vendor": "Apache Software Foundation",
          "product": "Apache Hive",
          "collectionURL": "https://repo.maven.apache.org/maven2",
          "packageName": "org.apache.hive:hive-llap-common",
          "versions": [
            {
              "status": "affected",
              "version": "2.2.0",
              "lessThan": "4.0.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "descriptions": [
        {
          "value": "Use of Arrays.equals() in LlapSignerImpl in\u00a0Apache Hive to compare message signatures\u00a0allows attacker to forge a valid signature for an arbitrary message byte by byte. The attacker should be an authorized user of the product to perform this attack.\u00a0Users are recommended to upgrade to version 4.0.0, which fixes this issue.\n\nThe problem occurs when an application doesn\u2019t use a constant-time algorithm for validating a signature.\u00a0The method Arrays.equals()\u00a0returns false\u00a0right away when it sees that one of the input\u2019s bytes are different. It means that the comparison time depends on the contents of the arrays. This little thing may allow an attacker to forge a valid signature for an arbitrary message byte by byte.\u00a0So it might allow malicious users to submit splits/work with selected signatures to LLAP without running as a privileged user, potentially leading to DDoS attack.\n\nMore details in the reference section.",
          "lang": "en",
          "supportingMedia": [
            {
              "type": "text/html",
              "base64": false,
              "value": "Use of Arrays.equals() in <span style=\"background-color: rgb(255, 255, 255);\">LlapSignerImpl in&nbsp;</span>Apache Hive to compare message signatures&nbsp;<span style=\"background-color: var(--wht);\">allows attacker to forge a valid signature for an arbitrary message byte by byte. The attacker should be an authorized user of the product to perform this attack.&nbsp;</span>Users are recommended to upgrade to version 4.0.0, which fixes this issue.<br><br><span style=\"background-color: rgb(253, 253, 253);\">The problem occurs when an application doesn\u2019t use a constant-time algorithm for validating a signature.&nbsp;<span style=\"background-color: rgb(253, 253, 253);\">The method </span><code>Arrays.equals()</code><span style=\"background-color: rgb(253, 253, 253);\">&nbsp;returns </span><code>false</code><span style=\"background-color: rgb(253, 253, 253);\">&nbsp;right away when it sees that one of the input\u2019s bytes are different. It means that the comparison time depends on the contents of the arrays. This little thing may allow an attacker to forge a valid signature for an arbitrary message byte by byte.&nbsp;So it might allow malicious users to submit splits/work with selected signatures to LLAP without running as a privileged user, potentially leading to DDoS attack.</span><br><br></span>More details in the reference section.<br>"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://github.com/apache/hive",
          "tags": [
            "product"
          ]
        },
        {
          "url": "https://github.com/apache/hive/commit/b418e3c9f479ba8e7d31e6470306111002ffa809",
          "tags": [
            "patch"
          ]
        },
        {
          "url": "https://issues.apache.org/jira/browse/HIVE-28030",
          "tags": [
            "issue-tracking"
          ]
        },
        {
          "url": "https://blog.gypsyengineer.com/en/security/preventing-timing-attacks-with-codeql.html",
          "tags": [
            "technical-description"
          ]
        },
        {
          "url": "https://cqr.company/web-vulnerabilities/timing-attacks/",
          "tags": [
            "technical-description"
          ]
        },
        {
          "url": "https://lists.apache.org/thread/0nloywj49nbtlc6l3c6363qvq7o1ztb7",
          "tags": [
            "vendor-advisory"
          ]
        }
      ],
      "metrics": [
        {
          "other": {
            "type": "Textual description of severity",
            "content": {
              "text": "important"
            }
          }
        }
      ],
      "credits": [
        {
          "lang": "en",
          "value": "Andrea Cosentino",
          "type": "reporter"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.1.0-dev"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-23953",
    "assignerOrgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09",
    "serial": 1,
    "state": "PUBLISHED"
  },
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1"
}