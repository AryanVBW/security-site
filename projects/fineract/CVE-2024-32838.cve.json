{
  "containers": {
    "cna": {
      "providerMetadata": {
        "orgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09"
      },
      "title": "SQL injection vulnerabilities in offices API endpoint",
      "problemTypes": [
        {
          "descriptions": [
            {
              "description": "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "lang": "en",
              "cweId": "CWE-89",
              "type": "CWE"
            }
          ]
        }
      ],
      "source": {
        "discovery": "UNKNOWN"
      },
      "affected": [
        {
          "vendor": "Apache Software Foundation",
          "product": "Apache Fineract",
          "versions": [
            {
              "status": "affected",
              "version": "1.4",
              "lessThanOrEqual": "1.9",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "descriptions": [
        {
          "value": "SQL Injection vulnerability in various API endpoints - offices, dashboards, etc. Apache Fineract versions 1.9 and before have a vulnerability that allows an authenticated attacker to inject malicious data into some of the REST API endpoints' query parameter.\u00a0\nUsers are recommended to upgrade to version 1.10.1, which fixes this issue.\n\nA SQL Validator has been implemented which allows us to configure a series of tests and checks against our SQL queries that will allow us to validate and protect against nearly all potential SQL injection attacks.",
          "lang": "en",
          "supportingMedia": [
            {
              "type": "text/html",
              "base64": false,
              "value": "SQL Injection vulnerability in various API endpoints - offices, dashboards, etc. Apache Fineract versions 1.9 and before have a vulnerability that allows an authenticated attacker to inject malicious data into some of the REST API endpoints' query parameter.&nbsp;<div><br>Users are recommended to upgrade to version 1.10.1, which fixes this issue.<br><br>A SQL Validator has been implemented which allows us to configure a series of tests and checks against our SQL queries that will allow us to validate and protect against nearly all potential SQL injection attacks.&nbsp;<br><br></div>"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://lists.apache.org/thread/7l88h17pn9nf8zpx5bbojk7ko5oxo1dy",
          "tags": [
            "vendor-advisory"
          ]
        }
      ],
      "metrics": [
        {
          "other": {
            "type": "Textual description of severity",
            "content": {
              "text": "important"
            }
          }
        },
        {
          "format": "CVSS",
          "scenarios": [
            {
              "lang": "en",
              "value": "GENERAL"
            }
          ],
          "cvssV4_0": {
            "version": "4.0",
            "attackVector": "NETWORK",
            "attackComplexity": "LOW",
            "attackRequirements": "NONE",
            "privilegesRequired": "HIGH",
            "userInteraction": "NONE",
            "vulnConfidentialityImpact": "HIGH",
            "subConfidentialityImpact": "HIGH",
            "vulnIntegrityImpact": "HIGH",
            "subIntegrityImpact": "HIGH",
            "vulnAvailabilityImpact": "HIGH",
            "subAvailabilityImpact": "HIGH",
            "Safety": "NOT_DEFINED",
            "Automatable": "NOT_DEFINED",
            "Recovery": "NOT_DEFINED",
            "valueDensity": "NOT_DEFINED",
            "vulnerabilityResponseEffort": "NOT_DEFINED",
            "providerUrgency": "NOT_DEFINED",
            "baseSeverity": "CRITICAL",
            "baseScore": 9.4,
            "vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:H/UI:N/VC:H/VI:H/VA:H/SC:H/SI:H/SA:H"
          }
        }
      ],
      "credits": [
        {
          "lang": "en",
          "value": "Kabilan S - Security engineer at Zoho",
          "type": "finder"
        },
        {
          "lang": "en",
          "value": "Aleksandar Vidakovic",
          "type": "remediation developer"
        }
      ],
      "x_generator": {
        "engine": "Vulnogram 0.1.0-dev"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2024-32838",
    "assignerOrgId": "f0158376-9dc2-43b6-827c-5f631a4d8d09",
    "serial": 1,
    "state": "PUBLISHED"
  },
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1"
}